P16 assembler v1.4.0 (Mar  6 2023)	.\t4.lst	Wed Jun 07 13:47:06 2023

Sections
Index   Name            Address   Size
0       .startup        0000      000E 14
1       .text           000E      0146 326
2       .data           0154      0000 0
3       .bss            0154      0002 2
4       .stack          0156      0040 64

Symbols
Name                    Type      Value       Section
_start                  LABEL     0004 4      .startup
AVG_TIME                ABSOLUTE  00C8 200    .startup
check_user              LABEL     0054 84     .text
delay                   LABEL     003E 62     .text
delay_end               LABEL     0052 82     .text
delay_inner_loop        LABEL     0048 72     .text
delay_outer_loop        LABEL     0044 68     .text
get_time                LABEL     00B0 176    .text
init                    LABEL     0010 16     .text
inport_addr             LABEL     013E 318    .text
inport_addr2            LABEL     0092 146    .text
INPORT_ADDRESS          ABSOLUTE  FF80 65408  .startup
inport_read             LABEL     0138 312    .text
isr                     LABEL     006C 108    .text
isr_addr                LABEL     000C 12     .startup
main                    LABEL     000E 14     .text
main_addr               LABEL     000A 10     .startup
outport_addr            LABEL     014E 334    .text
outport_addr2           LABEL     00A2 162    .text
OUTPORT_ADDRESS         ABSOLUTE  FFC0 65472  .startup
outport_init            LABEL     0140 320    .text
outport_write           LABEL     0148 328    .text
PTC_ADDR                LABEL     0132 306    .text
ptc_addr                LABEL     0152 338    .text
ptc_addr2               LABEL     00A0 160    .text
PTC_ADDRESS             ABSOLUTE  FF78 65400  .startup
PTC_CMD_START           ABSOLUTE  0000 0      .startup
PTC_CMD_STOP            ABSOLUTE  0001 1      .startup
ptc_get_value           LABEL     012C 300    .text
ptc_init                LABEL     0106 262    .text
ptc_start               LABEL     011C 284    .text
ptc_stop                LABEL     0124 292    .text
PTC_TC                  ABSOLUTE  0004 4      .startup
PTC_TCR                 ABSOLUTE  0000 0      .startup
PTC_TIR                 ABSOLUTE  0006 6      .startup
PTC_TMR                 ABSOLUTE  0002 2      .startup
reset_sysclk            LABEL     00F8 248    .text
RESULT                  ABSOLUTE  00FE 254    .startup
result_init_val         LABEL     0136 310    .text
result_init_val2        LABEL     003A 58     .text
setup_test              LABEL     0082 130    .text
show_result             LABEL     00DE 222    .text
STACK_SIZE              ABSOLUTE  0040 64     .startup
STIMULUS                ABSOLUTE  0001 1      .startup
stimulus_init_val       LABEL     0134 308    .text
stimulus_init_val2      LABEL     0090 144    .text
stimulus_init_val3      LABEL     001A 26     .text
sysclk                  LABEL     0154 340    .bss
sysclk_addr             LABEL     0150 336    .text
sysclk_addr2            LABEL     00A4 164    .text
sysclk_get_ticks        LABEL     0100 256    .text
test                    LABEL     0094 148    .text
test_1                  LABEL     00A6 166    .text
test_2                  LABEL     00BC 188    .text
TIME                    ABSOLUTE  00F0 240    .startup
tos                     LABEL     0196 406    .stack
tos_addr                LABEL     0008 8      .startup
USER                    ABSOLUTE  0001 1      .startup
user_mask               LABEL     003C 60     .text
wait0to1                LABEL     002A 42     .text
wait1to0                LABEL     001C 28     .text
wait_user               LABEL     00D0 208    .text

Code listing
   1          	.equ STACK_SIZE, 64
   2          	.equ INPORT_ADDRESS, 0xFF80
   3          	.equ OUTPORT_ADDRESS, 0xFFC0
   4          	.equ PTC_ADDRESS, 0xFF78
   5          	.equ PTC_TCR, 0
   6          	.equ PTC_TMR, 2
   7          	.equ PTC_TC, 4
   8          	.equ PTC_TIR, 6 
   9          	.equ USER, 0x01
  10          	.equ STIMULUS, 0x01
  11          	.equ TIME, 0xF0
  12          	.equ RESULT, 0xFE
  13          	.equ AVG_TIME, 200
  14          	.equ	PTC_CMD_START, 0             
  15          	.equ	PTC_CMD_STOP, 1
  16           	
  17           	.section .startup
  18 0000 01 58	    b _start
  19 0002 4F 0C	    ldr pc, isr_addr
  20           	
  21           	_start:
  22 0004 1D 0C	    ldr sp, tos_addr
  23 0006 1F 0C	    ldr pc, main_addr
  24           	
  25           	tos_addr:
  26 0008 96 01	    .word tos
  27           	
  28           	main_addr:
  29 000A 0E 00	    .word main
  30           	
  31           	isr_addr:
  32 000C 6C 00	    .word isr
  33           	
  34           	.text
  35           	
  36           	main:
  37 000E 00 58	    b init
  38           	
  39           	init:
  40 0010 40 0C	    ldr r0, stimulus_init_val3
  41 0012 31 0D	    ldr r1,  result_init_val2
  42 0014 80 C8	    orr r0, r0, r1
  43 0016 98 5C	    bl outport_write
  44 0018 01 58	    b wait1to0
  45           	
  46           	stimulus_init_val3:
  47 001A 01 00	    .word STIMULUS
  48           	
  49           	wait1to0:
  50 001C F0 0C	    ldr r0, user_mask
  51 001E 91 0F	    ldr r1, inport_addr2
  52 0020 12 00	    ldr r2, [r1, #0]
  53 0022 00 C1	    and r0, r0, r2
  54 0024 02 60	    mov r2, #0
  55 0026 00 B9	    cmp r0, r2
  56 0028 F9 47	    bne wait1to0
  57           	
  58           	wait0to1:
  59 002A 80 0C	    ldr r0, user_mask
  60 002C 21 0F	    ldr r1, inport_addr2
  61 002E 12 00	    ldr r2, [r1, #0]
  62 0030 00 C1	    and r0, r0, r2
  63 0032 12 60	    mov r2, #1
  64 0034 00 B9	    cmp r0, r2
  65 0036 F9 47	    bne wait0to1
  66 0038 24 58	    b setup_test
  67           	
  68           	result_init_val2:
  69 003A FE 00	    .word RESULT
  70           	
  71           	user_mask:
  72 003C 01 00	    .word USER
  73           	;tá mal help
  74           	delay:
  75 003E 0E 24	    push lr
  76 0040 00 C0		and	r0, r0, r0
  77 0042 07 40		beq	delay_end
  78           	delay_outer_loop:
  79 0044 01 65		mov	r1, #0x50
  80 0046 31 7C		movt r1, #0xC3
  81           	delay_inner_loop:
  82 0048 91 A8		sub	r1, r1, #1
  83 004A 04 5C	    bl check_user
  84 004C FD 47		bne	delay_inner_loop
  85 004E 80 A8		sub	r0, r0, #1
  86 0050 F9 47		bne	delay_outer_loop
  87           	delay_end:
  88 0052 0F 04		pop pc
  89           	
  90           	check_user:
  91 0054 0E 24	    push lr
  92 0056 00 24	    push r0
  93 0058 01 24	    push r1
  94 005A 6E 5C	    bl inport_read
  95 005C 11 60	    mov r1, #USER
  96 005E 80 C0	    and r0, r0, r1
  97 0060 01 60	    mov r1, #0
  98 0062 80 B8	    cmp r0, r1
  99 0064 D5 43	    beq init
 100 0066 01 04	    pop r1
 101 0068 00 04	    pop r0
 102 006A 0F 04	    pop pc
 103           	
 104           	isr:
 105 006C 00 24	    push r0
 106 006E 01 24	    push r1
 107 0070 70 0D	    ldr r0, ptc_addr2
 108 0072 00 2B		strb r0, [r0, #PTC_TIR]
 109 0074 70 0D		ldr r0, sysclk_addr2
 110 0076 01 00		ldr r1, [r0,#0]
 111 0078 91 A0		add r1, r1, #1
 112 007A 01 20		str r1, [r0, #0]
 113 007C 01 04	    pop r1
 114 007E 00 04	    pop r0
 115 0080 20 B0	    movs pc, lr
 116           	
 117           	setup_test:
 118 0082 F1 0C	    ldr r1, outport_addr2
 119 0084 10 00	    ldr r0, [r1, #0]
 120 0086 10 B0	    mvn r0, r0
 121 0088 32 0C	    ldr r2, stimulus_init_val2
 122 008A 00 81	    add r0, r0, r2
 123 008C 5D 5C	    bl outport_write
 124 008E 02 58	    b test
 125           	
 126           	stimulus_init_val2:
 127 0090 01 00	    .word STIMULUS
 128           	
 129           	inport_addr2:
 130 0092 80 FF	    .word INPORT_ADDRESS
 131           	
 132           	test:
 133 0094 08 5C	    bl test_1
 134 0096 00 60	    mov r0, #0
 135 0098 57 5C	    bl outport_write
 136 009A 10 5C	    bl test_2
 137 009C 20 5C	    bl show_result
 138 009E B8 5B	    b init
 139           	
 140           	ptc_addr2:
 141 00A0 78 FF	    .word PTC_ADDRESS
 142           	
 143           	outport_addr2:
 144 00A2 C0 FF	    .word OUTPORT_ADDRESS
 145           	
 146           	sysclk_addr2:
 147 00A4 54 01	    .word sysclk
 148           	
 149           	test_1:
 150 00A6 0E 24	    push lr
 151           	   ; bl inport_read
 152           	    ;bl check_user
 153 00A8 03 5C	    bl get_time
 154 00AA 04 B0	    mov r4, r0
 155 00AC C8 5F	    bl delay
 156 00AE 0F 04	    pop pc 
 157           	
 158           	get_time:
 159 00B0 0E 24	    push lr
 160 00B2 42 5C	    bl inport_read
 161 00B4 01 6F	    mov r1, #TIME
 162 00B6 80 C0	    and r0, r0, r1
 163 00B8 00 EA	    lsr r0, r0, #4
 164 00BA 0F 04	    pop pc
 165           	
 166           	test_2:
 167 00BC 0E 24	    push lr 
 168 00BE 0E 24	    push lr
 169 00C0 60 B0	    mrs r0, cpsr ; lê valor actual do cpsr
 170 00C2 01 61	    mov r1, #0x10 ; mask do bit a activar IE
 171 00C4 80 C8	    orr r0, r0, r1 ; junta aos outros bits de estado
 172 00C6 40 B0	    msr cpsr, r0 ; carrega novo cpsr
 173 00C8 20 60	    mov r0, #2
 174 00CA 1D 5C	    bl ptc_init
 175 00CC 01 5C	    bl wait_user
 176 00CE 0F 04	    pop pc
 177           	
 178           	wait_user:
 179 00D0 33 5C	    bl inport_read
 180 00D2 11 60	    mov r1, #USER
 181 00D4 80 C0	    and r0, r0, r1
 182 00D6 01 60	    mov r1, #0
 183 00D8 80 B8	    cmp r0, r1
 184 00DA FA 47	    bne wait_user
 185 00DC 0F 04	    pop pc 
 186           	
 187           	show_result:
 188 00DE 0E 24	    push lr
 189 00E0 0F 5C	    bl sysclk_get_ticks
 190 00E2 02 B0	    mov r2, r0
 191 00E4 1F 5C	    bl ptc_stop
 192 00E6 80 6C	    mov r0, #AVG_TIME
 193 00E8 20 88	    sub r0, r2, r0
 194 00EA 80 E0	    lsl r0, r0, #1
 195 00EC E1 6F	    mov r1, #RESULT
 196 00EE 80 C0	    and r0, r0, r1
 197 00F0 2B 5C	    bl outport_write
 198 00F2 50 60	    mov r0, #5
 199 00F4 A4 5F	    bl delay
 200 00F6 0F 04	    pop pc
 201           	
 202           	reset_sysclk:
 203 00F8 B0 0E	    ldr r0, sysclk_addr
 204 00FA 01 60	    mov r1, #0
 205 00FC 01 20	    str r1, [r0]
 206 00FE 0F B7	    mov pc, lr
 207           	
 208           	sysclk_get_ticks:
 209 0100 70 0E		ldr r0 , sysclk_addr
 210 0102 00 00		ldr r0, [r0, #0]
 211 0104 0F B7		mov pc, lr
 212           	
 213           	ptc_init:
 214 0106 0E 24		push lr
 215 0108 00 24		push r0
 216 010A 0C 5C		bl ptc_stop
 217 010C 00 04		pop r0
 218 010E 81 67		mov r1, #PTC_ADDRESS & 0xFF
 219 0110 F1 7F	    movt r1, #(PTC_ADDRESS >> 8) & 0xFF
 220 0112 10 29	    strb r0, [r1, #PTC_TMR]
 221 0114 10 2B		strb r0, [r1, #PTC_TIR]
 222 0116 02 5C		bl ptc_start
 223 0118 0E 04		pop lr
 224 011A 0F B7	    mov pc, lr
 225           	
 226           	ptc_start:
 227 011C A0 0C		ldr	r0, PTC_ADDR
 228 011E 01 60		mov	r1, #PTC_CMD_START
 229 0120 01 28		strb	r1, [r0, #PTC_TCR]
 230 0122 0F B7		mov	pc, lr
 231           	
 232           	ptc_stop:
 233 0124 60 0C		ldr	r0, PTC_ADDR
 234 0126 11 60		mov	r1, #PTC_CMD_STOP
 235 0128 01 28		strb	r1, [r0, #PTC_TCR]
 236 012A 0F B7		mov	pc, lr
 237           	
 238           	ptc_get_value:
 239 012C 21 0C		ldr	r1, PTC_ADDR
 240 012E 10 0A		ldrb	r0, [r1, #PTC_TC]
 241 0130 0F B7		mov	pc, lr
 242           	
 243           	PTC_ADDR:
 244 0132 78 FF		.word	PTC_ADDRESS
 245           	
 246           	stimulus_init_val:
 247 0134 01 00	    .word STIMULUS
 248           	
 249           	result_init_val:
 250 0136 FE 00	    .word RESULT
 251           	
 252           	inport_read:
 253 0138 21 0C		ldr	r1, inport_addr
 254 013A 10 08		ldrb	r0, [r1, #0]
 255 013C 0F B7		mov	pc, lr
 256           	
 257           	inport_addr:
 258 013E 80 FF		.word	INPORT_ADDRESS
 259           	
 260           	outport_init:
 261 0140 0E 24	    push lr
 262 0142 F0 6F	    mov r0, #0xFF
 263 0144 01 5C	    bl outport_write
 264 0146 0F 04	    pop pc
 265           	
 266           	outport_write:
 267 0148 21 0C		ldr	r1, outport_addr
 268 014A 10 28		strb	r0, [r1, #0]
 269 014C 0F B7		mov	pc, lr
 270           	
 271           	outport_addr:
 272 014E C0 FF		.word	OUTPORT_ADDRESS
 273           	
 274           	sysclk_addr:
 275 0150 54 01	    .word sysclk
 276           	
 277           	ptc_addr:
 278 0152 78 FF		.word PTC_ADDRESS
 279           	
 280           	.data
 281           	
 282           	.bss
 283           	
 284           	sysclk:
 285 0154 00   		.space	2
 285 0155 00
 286           	
 287           	    .stack
 288 0156 00   	    .space STACK_SIZE
 288 .... ..
 288 0195 00
 289           	tos:
